// Mocks generated by Mockito 5.4.0 from annotations
// in resto_app/test/provider/restaurant_provider_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i7;

import 'package:mockito/mockito.dart' as _i1;
import 'package:resto_app/data/model/customer_review.dart' as _i5;
import 'package:resto_app/data/model/restaurant.dart' as _i2;
import 'package:resto_app/data/model/restaurant_detail.dart' as _i3;
import 'package:resto_app/data/model/restaurant_search.dart' as _i4;
import 'package:resto_app/util/enums.dart' as _i8;

import 'restaurant_provider_test.dart' as _i6;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeRestaurantResult_0 extends _i1.SmartFake
    implements _i2.RestaurantResult {
  _FakeRestaurantResult_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRestaurantDetailResult_1 extends _i1.SmartFake
    implements _i3.RestaurantDetailResult {
  _FakeRestaurantDetailResult_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRestaurantSearchResult_2 extends _i1.SmartFake
    implements _i4.RestaurantSearchResult {
  _FakeRestaurantSearchResult_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCustomerReviewResult_3 extends _i1.SmartFake
    implements _i5.CustomerReviewResult {
  _FakeCustomerReviewResult_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ApiServiceTest].
///
/// See the documentation for Mockito's code generation for more information.
class MockApiServiceTest extends _i1.Mock implements _i6.ApiServiceTest {
  MockApiServiceTest() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<_i2.RestaurantResult> listRestaurant() => (super.noSuchMethod(
        Invocation.method(
          #listRestaurant,
          [],
        ),
        returnValue:
            _i7.Future<_i2.RestaurantResult>.value(_FakeRestaurantResult_0(
          this,
          Invocation.method(
            #listRestaurant,
            [],
          ),
        )),
      ) as _i7.Future<_i2.RestaurantResult>);
  @override
  _i7.Future<_i3.RestaurantDetailResult> detailRestaurant(String? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #detailRestaurant,
          [id],
        ),
        returnValue: _i7.Future<_i3.RestaurantDetailResult>.value(
            _FakeRestaurantDetailResult_1(
          this,
          Invocation.method(
            #detailRestaurant,
            [id],
          ),
        )),
      ) as _i7.Future<_i3.RestaurantDetailResult>);
  @override
  String picture(
    String? pictureId,
    _i8.PictureSize? pictureSize,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #picture,
          [
            pictureId,
            pictureSize,
          ],
        ),
        returnValue: '',
      ) as String);
  @override
  _i7.Future<_i4.RestaurantSearchResult> searchRestaurant(String? query) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchRestaurant,
          [query],
        ),
        returnValue: _i7.Future<_i4.RestaurantSearchResult>.value(
            _FakeRestaurantSearchResult_2(
          this,
          Invocation.method(
            #searchRestaurant,
            [query],
          ),
        )),
      ) as _i7.Future<_i4.RestaurantSearchResult>);
  @override
  _i7.Future<_i5.CustomerReviewResult> addReview(
    String? id,
    String? name,
    String? review,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addReview,
          [
            id,
            name,
            review,
          ],
        ),
        returnValue: _i7.Future<_i5.CustomerReviewResult>.value(
            _FakeCustomerReviewResult_3(
          this,
          Invocation.method(
            #addReview,
            [
              id,
              name,
              review,
            ],
          ),
        )),
      ) as _i7.Future<_i5.CustomerReviewResult>);
}
